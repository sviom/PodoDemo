@*@model IEnumerable<PodoDemo.Models.User>*@
@model string

@{
    ViewData["Title"] = "사용자";
}


<script type="text/javascript">
    var mainmenuId = -1;

    $(document).ready(function () {
        SetMainmenulist(@Html.Raw(Model));


        //$('#userList').on('rowdoubleclick', function (event) {
        //    var args = event.args;
        //    // row's bound index.
        //    var boundIndex = args.rowindex;
        //    // row's visible index.
        //    var visibleIndex = args.visibleindex;
        //    // right click.
        //    var rightclick = args.rightclick;
        //    // original event.
        //    var ev = args.originalEvent;

        //    $("#SubmenuArea").show();

        //    var data = $('#mainMenuList').jqxGrid('getrowdata', boundIndex);

        //    mainmenuId = data.Id;

        //    var submenulist
        //        = ExecuteAjax("POST", "/Manage/GetSubmenulist", "json", "application/json", JSON.stringify(data.Id));
        //    SetSubmenulist(submenulist);

        //});
    });
    // 대메뉴 표시
    function SetMainmenulist(userlistRaw) {
        var source =
            {
                localdata: userlistRaw,
                datatype: "json",
                datafields:
                [
                    { name: 'Id', type: 'number' },
                    { name: 'Name', type: 'string' },
                    { name: 'Email', type: 'string' },
                    { name: 'Phone', type: 'string' },
                    { name: 'Mobile', type: 'string' },
                    { name: 'Department', type: 'string' },
                    { name: 'Position', type: 'string' },
                    { name: 'Level', type: 'string' }
                ]
            };

        var dataAdapter = new $.jqx.dataAdapter(source);

        $("#userList").jqxGrid(
            {
                width: '100%',
                source: dataAdapter,
                pageable: true,
                autoheight: true,
                autorowheight: true,
                sortable: true,
                altrows: true,
                enabletooltips: true,
                editable: false,
                selectionmode: 'singlerow',
                pagesizeoptions: [10, 15, 20, 25, 30, 35, 40, 45, 50],
                //showfilterrow: true,
                filterable: true,
                pagesize: 15,
                theme: "metroCustom",//테마설정
                //columnsheight: '40px',//헤더 높이 설정
                localization: GetLocalizationString(),
                columns: [
                    //문자로 나오는 항목
                    { text: "ID", datafield: "Id", align: 'center', cellsalign: 'center', width: "10%", minwidth: '30px' },
                    { text: "이름", datafield: "Name", align: 'center', cellsalign: 'center', width: "10%", minwidth: '100px'},
                    { text: "이메일", datafield: "Email", align: 'center', cellsalign: 'center', width: "20%", minwidth: '100px' },
                    { text: "전화번호", datafield: "Phone", align: 'center', cellsalign: 'center', width: "10%", minwidth: '100px' },
                    { text: "휴대폰", datafield: "Mobile", align: 'center', cellsalign: 'center', width: "10%", minwidth: '100px' },
                    { text: "부서", datafield: "Department", align: 'center', cellsalign: 'center', width: "10%", minwidth: '100px' },
                    { text: "직급", datafield: "Position", align: 'center', cellsalign: 'center', width: "10%", minwidth: '100px' },
                    { text: "등급", datafield: "Level", align: 'center', cellsalign: 'center', width: "10%", minwidth: '100px' }
                ]
            });
    }

</script>

<div class="View">
    <div class="container">
        <div class="row">
            <div class="col-md-12 custom-header">
                <p class="text-left">
                    사용자 관리
                </p>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="custom-title">
                    <span class="glyphicon glyphicon-list" aria-hidden="true"></span>
                    <span>사용자 목록</span>
                </div>
                <div id="userList"></div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-offset-10 col-md-2">
                <button onclick="MenuCreate();" class="btn btn-default">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                    사용자 생성
                </button>
            </div>
        </div>
    </div>
</div>

@*<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Pw)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Engname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Mobile)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Position)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ismaster)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Token)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Keybox)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Excelauth)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Level)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Createdate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Createuser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Modifydate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Modifyuser)
                </th>
            <th>
                @Html.DisplayNameFor(model => model.DepartmentNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Pw)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Engname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mobile)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ismaster)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Token)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Keybox)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Excelauth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Level)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Createdate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Createuser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modifydate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modifyuser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartmentNavigation.Optionid)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
