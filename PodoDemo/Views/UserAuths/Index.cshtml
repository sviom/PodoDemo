@model IEnumerable<PodoDemo.Models.UserAuth>

@{
    ViewData["Title"] = "권한관리";
}

<script type="text/javascript">
    $(document).ready(function () {
        GetUserDDL('1-1', '@ViewBag.UserId', 'Ownerid', SetoptionTag, '@ViewBag.UserId', true, false, false);
        GetOptionDDL('4', 'AccountCustomerType', SetoptionTag, '', true, false, false);
        SetoptionTag('Menu', JSON.parse('@Html.Raw(ViewBag.MenuList)'), '', true, false, false);
        SetoptionTag('Submenu', JSON.parse('@Html.Raw(ViewBag.SubmenuList)'), '', true, false, false);

        var Info = new Object();
        Info.Userid = $("#Ownerid option:selected").val();
        Info.Menuid = $("#Menu option:selected").val();
        Info.Submenuid = $("#Submenu option:selected").val();

        var lis
            = ExecuteAjax("POST", "/UserAuths/GetUserauthList", "json", "application/json", JSON.stringify(Info));
        SetBasicElement(lis);
    });


    // 기본 출력 항목 표시
    function SetBasicElement(userauthListRaw) {

        var combosource = {
            localData: ExecuteAjax("POST", "/UserAuths/GetAuthList", "json", "application/json"),
            dataType: "json",
            dataFields:
            [
                { name: 'Value' },
                { name: 'Text' }
            ]
        };
        var comboAdapter = new $.jqx.dataAdapter(combosource, { autoBind: true });

        var source =
            {
                localdata: userauthListRaw,
                datatype: "json",
                datafields:
                [
                    { name: 'Id', type: 'number' },
                    { name: 'ReadAuthControl', value: 'Read', values: { source: comboAdapter.records, value: 'Value', name: 'Text' } },
                    { name: 'Read', type: 'string' },
                    { name: 'ModifyAuthControl', value: 'Modify', values: { source: comboAdapter.records, value: 'Value', name: 'Text' } },
                    { name: 'Modify', type: 'string' },
                    { name: 'WriteAuthControl', value: 'Write', values: { source: comboAdapter.records, value: 'Value', name: 'Text' } },
                    { name: 'Write', type: 'string' },
                    { name: 'DeleteAuthControl', value: 'Delete', values: { source: comboAdapter.records, value: 'Value', name: 'Text' } },
                    { name: 'Delete', type: 'string' },
                    { name: 'Userid', type: 'string' }
                ]
            };

        var dataAdapter = new $.jqx.dataAdapter(source);

        $("#userAuthList").jqxGrid({
            width: '100%',
            source: dataAdapter,
            pageable: true,
            autoheight: true,
            autorowheight: true,
            sortable: true,
            altrows: true,
            enabletooltips: true,
            editable: true,
            editmode: 'click',
            pagesizeoptions: [10, 15, 20, 25, 30, 35, 40, 45, 50],
            //showfilterrow: true,
            filterable: true,
            pagesize: 15,
            theme: "metroCustom",//테마설정
            //columnsheight: '40px',//헤더 높이 설정
            localization: GetLocalizationString(),
            columns: [
                //문자로 나오는 항목
                { text: "Id", datafield: "Id", hidden: true },
                { text: '사용자', datafield: 'Userid', align: 'center', cellsalign: 'center', width: '20%', minwidth: '100px', editable: false },
                {
                    text: "읽기 권한", datafield: "Read", displayfield: 'ReadAuthControl', align: 'center', cellsalign: 'center', width: '20%', minwidth: '100px'
                    , columntype: 'combobox'
                    , initeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
                        editor.jqxComboBox({ autoDropDownHeight: true, source: combosource.localData, valueMember: 'Value', displayMember: 'Text' });
                        editor.jqxComboBox('selectItem', celltext);
                    }
                },
                {
                    text: '수정 권한', datafield: 'Modify', displayfield: 'ModifyAuthControl', align: 'center', cellsalign: 'center', width: '20%', minwidth: '100px'
                    , columntype: 'combobox'
                    , initeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
                        editor.jqxComboBox({ autoDropDownHeight: true, source: combosource.localData, valueMember: 'Value', displayMember: 'Text' });
                        editor.jqxComboBox('selectItem', celltext);
                    }
                },
                {
                    text: '쓰기 권한', datafield: 'Write', displayfield: 'WriteAuthControl', align: 'center', cellsalign: 'center', width: '20%', minwidth: '100px'
                    , columntype: 'combobox'
                    , initeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
                        editor.jqxComboBox({ autoDropDownHeight: true, source: combosource.localData, valueMember: 'Value', displayMember: 'Text' });
                        editor.jqxComboBox('selectItem', celltext);
                    }
                },
                {
                    text: '삭제 권한', datafield: 'Delete', displayfield: 'DeleteAuthControl', align: 'center', cellsalign: 'center', width: '20%', minwidth: '100px'
                    , columntype: 'combobox'
                    , initeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
                        editor.jqxComboBox({ autoDropDownHeight: true, source: combosource.localData, valueMember: 'Value', displayMember: 'Text' });
                        editor.jqxComboBox('selectItem', celltext);
                    }
                }
            ]
        });
    }
</script>

<div class="View">
    <div class="container">
        <div class="row">
            <div class="col-md-12 custom-header">
                <p class="text-left">
                    권한 관리
                </p>
            </div>
        </div>

        <form class="form-horizontal" id="SearchAccountsForm">
            <div class="form-group">
                <div class="col-md-12">
                    <div class="custom-title">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                        <span>검색</span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-1 control-label">사용자</label>
                <div class="col-md-2">
                    <select id="Ownerid" name="Ownerid" class="form-control"></select>
                </div>

                <label class="col-md-1 control-label">대메뉴</label>
                <div class="col-md-2">
                    <select id="Menu" name="Menu" class="form-control"></select>
                </div>

                <label class="col-md-1 control-label">세부메뉴</label>
                <div class="col-md-2">
                    <select id="Submenu" name="Submenu" class="form-control"></select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-10 col-md-2">
                    <button type="button" class="btn btn-default" onclick="SearchAccounts();">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                        검색
                    </button>
                </div>
            </div>
        </form>

        <div class="row">
            <div class="col-md-12">
                <div class="custom-title">
                    <hr />
                    <span class="glyphicon glyphicon-list" aria-hidden="true"></span>
                    <span>권한 목록</span>
                </div>
                <div id="userAuthList"></div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-offset-10 col-md-2">
                <a href="#" class="btn btn-default">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                    저장
                </a>
            </div>
        </div>
    </div>
</div>
